{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepz\\\\Desktop\\\\app-academia\\\\app\\\\src\\\\Routes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"./components/LoginButton\";\nimport Dashboard from \"./components/Dashboard\";\n\n// Definir um componente ProtectedRoute\n// Este componente verifica se o utilizador está autenticado antes de renderizar seus filhos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  // Obtém as propriedades necessárias do contexto Auth0\n  const {\n    isAuthenticated,\n    isLoading,\n    loginWithRedirect\n  } = useAuth0();\n\n  // Usa um efeito para redirecionar para a página de login se o usuário não estiver autenticado\n  React.useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      loginWithRedirect();\n    }\n  }, [isLoading, isAuthenticated, loginWithRedirect]);\n\n  // Renderiza os filhos se o usuário estiver autenticado e não estiver carregando\n  // Caso contrário, não renderiza nada\n  return isAuthenticated && !isLoading ? children : null;\n};\n\n// Define as rotas principais para a aplicação\n_s(ProtectedRoute, \"RicKhsO+Y6dDXmXY87otME373+8=\", false, function () {\n  return [useAuth0];\n});\n_c = ProtectedRoute;\nexport const AppRoutes = () => /*#__PURE__*/_jsxDEV(Routes, {\n  children: [\"A rota /login renderiza o componente LoginButton\", /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), \"// A rota raiz (/) renderiza o componente Dashboard dentro de um ProtectedRoute // Isso significa que o usu\\xE1rio deve estar autenticado para ver o Dashboard\", /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 47\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n_c2 = AppRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"AppRoutes\");","map":{"version":3,"names":["React","Route","Routes","useAuth0","LoginButton","Dashboard","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","isLoading","loginWithRedirect","useEffect","_c","AppRoutes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/deepz/Desktop/app-academia/app/src/Routes.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport LoginButton from \"./components/LoginButton\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\n// Definir um componente ProtectedRoute\r\n// Este componente verifica se o utilizador está autenticado antes de renderizar seus filhos\r\nexport const ProtectedRoute = ({ children }) => {\r\n  // Obtém as propriedades necessárias do contexto Auth0\r\n  const { isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\r\n  \r\n  // Usa um efeito para redirecionar para a página de login se o usuário não estiver autenticado\r\n  React.useEffect(() => {\r\n    if (!isLoading && !isAuthenticated) {\r\n      loginWithRedirect();\r\n    }\r\n  }, [isLoading, isAuthenticated, loginWithRedirect]);\r\n\r\n  // Renderiza os filhos se o usuário estiver autenticado e não estiver carregando\r\n  // Caso contrário, não renderiza nada\r\n  return isAuthenticated && !isLoading ? children : null;\r\n};\r\n\r\n// Define as rotas principais para a aplicação\r\nexport const AppRoutes = () => (\r\n  <Routes>\r\n     A rota /login renderiza o componente LoginButton\r\n    <Route path=\"/login\" element={<LoginButton />} />\r\n    // A rota raiz (/) renderiza o componente Dashboard dentro de um ProtectedRoute\r\n    // Isso significa que o usuário deve estar autenticado para ver o Dashboard\r\n    <Route path=\"/\" element={<ProtectedRoute> <Dashboard /> </ProtectedRoute>} />\r\n  </Routes>\r\n);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM;IAAEC,eAAe;IAAEC,SAAS;IAAEC;EAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC;;EAEpE;EACAH,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,IAAI,CAACF,SAAS,IAAI,CAACD,eAAe,EAAE;MAClCE,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACD,SAAS,EAAED,eAAe,EAAEE,iBAAiB,CAAC,CAAC;;EAEnD;EACA;EACA,OAAOF,eAAe,IAAI,CAACC,SAAS,GAAGH,QAAQ,GAAG,IAAI;AACxD,CAAC;;AAED;AAAAC,EAAA,CAhBaF,cAAc;EAAA,QAEiCL,QAAQ;AAAA;AAAAY,EAAA,GAFvDP,cAAc;AAiB3B,OAAO,MAAMQ,SAAS,GAAGA,CAAA,kBACvBT,OAAA,CAACL,MAAM;EAAAO,QAAA,GAAC,kDAEN,eAAAF,OAAA,CAACN,KAAK;IAACgB,IAAI,EAAC,QAAQ;IAACC,OAAO,eAAEX,OAAA,CAACH,WAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,kKAGjD,eAAAf,OAAA,CAACN,KAAK;IAACgB,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEX,OAAA,CAACC,cAAc;MAAAC,QAAA,GAAC,GAAC,eAAAF,OAAA,CAACF,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACvE,CACT;AAACC,GAAA,GARWP,SAAS;AAAA,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}